<!--
  Copyright Â© 2014-2019 Cask Data, Inc.

  Licensed under the Apache License, Version 2.0 (the "License"); you may not
  use this file except in compliance with the License. You may obtain a copy of
  the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
  License for the specific language governing permissions and limitations under
  the License.
  -->
<configuration>

  <!-- Global Configuration -->

  <property>
    <name>enable.unrecoverable.reset</name>
    <value>true</value>
    <description>
      Determines if resetting CDAP should be enabled. **WARNING: Enabling
      this option makes it possible to delete all applications and data; NO
      RECOVERY IS POSSIBLE!**
    </description>
  </property>

  <property>
    <name>bootstrap.file</name>
    <value>bootstrap/sandbox.json</value>
    <description>
      File that contains bootstrap steps that should be executed on a new CDAP instance as well
      as steps that should be executed on every restart of CDAP. Bootstrap steps include operations
      like loading system artifacts, creating the native profile, and creating the data prep
      application.
    </description>
  </property>

  <property>
    <name>system.app.config.dir</name>
    <value>system-app-config</value>
    <description>
      Directory that contains definitions for what system apps should be running. This directory is continuously
      monitored for new/modified config files and updating application state to match what is defined in those files.
    </description>
  </property>

  <!-- Applications Configuration -->

  <property>
    <name>app.artifact.dir</name>
    <value>artifacts</value>
    <description>
      Semicolon-separated list of local directories scanned for system artifacts
      to add to the artifact repository
    </description>
  </property>

  <property>
    <name>app.program.runtime.extensions.dir</name>
    <value>ext/runtimes</value>
    <description>
      Semicolon-separated list of local directories that are scanned for
      program runtime extensions
    </description>
  </property>

  <property>
    <name>app.program.spark.compat</name>
    <value>spark2_2.11</value>
    <description>
      Spark compatibility version. Must be 'spark2_2.11' or 'spark3_2.12'. This is only
      used in CDAP Local Sandbox mode. In Distributed CDAP mode, the Spark version will be
      automatically detected.
    </description>
  </property>

  <!-- Preview Configuration -->

  <property>
    <name>enable.preview</name>
    <value>true</value>
    <description>
      Determines if preview should be enabled.
    </description>
  </property>

  <!-- Datasets Configuration -->

  <property>
    <name>data.local.storage.blocksize</name>
    <value>8192</value>
    <description>
      Block size in bytes for data fabric when in CDAP Local Sandbox
    </description>
  </property>

  <property>
    <name>data.local.storage.cachesize</name>
    <value>104857600</value>
    <description>
      Cache size in bytes for data fabric when in CDAP Local Sandbox
    </description>
  </property>


  <!-- Logging Configuration -->

  <property>
    <name>log.base.dir</name>
    <value>logs/avro</value>
    <description>
      Base log directory
    </description>
  </property>

  <property>
    <name>log.process.pipeline.config.dir</name>
    <value>ext/logging/config</value>
    <description>
      A local directory on the CDAP Master that is scanned for log processing pipeline
      configurations. Each pipeline is defined by a file in the logback XML format, with
      ".xml" as the file name extension.
    </description>
  </property>

  <property>
    <name>log.process.pipeline.event.delay.ms</name>
    <value>100</value>
    <description>
      The time a log event stays in the log processing pipeline buffer before
      writing out to log appenders in milliseconds. A longer delay will result
      in less frequent flush to disk but longer for logs to be available.
    </description>
  </property>

  <property>
    <name>log.process.pipeline.lib.dir</name>
    <value>ext/logging/lib</value>
    <description>
      Semicolon-separated list of local directories on the CDAP Master scanned
      for additional library JAR files to be included for log processing
    </description>
  </property>

  <property>
    <name>log.pipeline.cdap.file.permissions</name>
    <value> </value>
    <description>
      We don't want to use set permissions in CDAP Local Sandbox, as posix permissions are
      not supported on the Windows FS.
    </description>
  </property>

  <property>
    <name>log.pipeline.cdap.dir.permissions</name>
    <value> </value>
    <description>
      We don't want to use set permissions in CDAP Local Sandbox, as posix permissions are
      not supported on the Windows FS.
    </description>
  </property>

  <!-- Metrics Configuration -->

  <property>
    <name>metrics.data.table.retention.minimum.resolution.seconds</name>
    <value>7200</value>
    <description>
      Retention resolution in seconds of the minimum resolution table;
      default retention period is 2 hours
    </description>
  </property>

  <property>
    <name>metrics.writer.extensions.dir</name>
    <value>ext/metricswriters</value>
    <description>
      Semicolon-separated list of local directories on the CDAP Master that
      are scanned for metrics writer extensions
    </description>
  </property>

  <!-- Operational Stats Configuration -->
  <property>
    <name>operational.stats.extensions.dir</name>
    <value>ext/operations</value>
    <description>
      Semicolon-separated list of local directories on the CDAP Master
      that are scanned for operational statistics extensions
    </description>
  </property>

  <property>
    <name>runtime.extensions.dir</name>
    <value>ext/runtimeproviders</value>
    <description>
      Semicolon-separated list of local directories on the CDAP Master that
      are scanned for program runtime extensions
    </description>
  </property>

  <!-- Tephra Configuration -->
  <property>
    <name>data.tx.prune.enable</name>
    <value>false</value>
    <description>
      Disable invalid list transaction pruning
    </description>
  </property>

  <!-- Router Configuration -->

  <property>
    <name>router.address</name>
    <value>127.0.0.1</value>
    <description>
      CDAP Router service address to which CDAP UI connects (deprecated; use
      router.server.address directly)
    </description>
  </property>

  <property>
    <name>router.bind.address</name>
    <value>0.0.0.0</value>
    <description>
      CDAP Router service bind address
    </description>
  </property>

  <property>
    <name>router.server.address</name>
    <value>${router.address}</value>
    <description>
      CDAP Router service address to which CDAP UI connects
    </description>
  </property>

  <property>
    <name>kerberos.auth.enabled</name>
    <value>false</value>
    <description>
      Determines if Kerberos authentication is enabled
    </description>
  </property>

  <!-- Secure Store Configuration -->
  <property>
    <name>security.store.provider</name>
    <value>file</value>
    <description>
      The secure store provider that defines the actual storage system backing the CDAP secure
      store APIs. Secure store APIs are used to write or look up sensitive information, such as password.
      It is also used to evaluate secure macros identified by ${secure(my-key)}.
      The value can be 'file' or name of the extension to be used for storing sensitive data.
    </description>
  </property>

  <property>
    <name>security.store.extensions.dir</name>
    <value>ext/securestores</value>
    <description>
      Semicolon-separated list of local directories that are scanned for secure store extensions
    </description>
  </property>

  <property>
    <name>app.program.log.appender.extensions.dir</name>
    <value>ext/log/appenders</value>
    <description>
      Directory for log appender jars
    </description>
  </property>

  <!-- Delta Replicator Settings -->

  <property>
    <name>ui.feature.cdc</name>
    <value>true</value>
    <description>
      Enables the experimental Delta Replicator UI
    </description>
  </property>

  <property>
    <name>delta.default.checkpoint.directory</name>
    <value>checkpoints/delta</value>
    <description>
      Default path to store replicator state and offsets
    </description>
  </property>

  <property>
    <name>capability.config.dir</name>
    <value>capability-config</value>
    <description>
      Internal directory that maintains the currently disabled and enabled configurations
    </description>
  </property>

  <property>
    <name>capability.autoinstall.threads</name>
    <value>5</value>
    <description>
      Number of threads to be used for auto installing resources when a capability is enabled
    </description>
  </property>

  <!-- Events Settings -->
  <property>
    <name>event.publish.enabled</name>
    <value>false</value>
    <description>
      Boolean value to enable or disable publish manager to publish TMS messages.
    </description>
  </property>

</configuration>
